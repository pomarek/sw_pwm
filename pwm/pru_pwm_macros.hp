// ************************************************************************
.macro pwm_init
	//init cycle data
	ldi ctrl.cycle, 0
	ldi ctrl.step, 0
	mov ctrl.data, DESC_START
	lbbo ctrl.servo_per_step, ctrl.data, 0, 1
	mov ctrl.data, DATA_START
	//init time base
	ecap0_init 2000, 1000
.endm

// ************************************************************************
.macro init_step
	qbne INIT_STEP_END, ctrl.cycle, 0
	init_servos_for_step
	INIT_STEP_END:
.endm

// ************************************************************************
.macro finish_step
	qbne FINISH_STEP_END, ctrl.cycle, 250
	finish_servo_step
	FINISH_STEP_END:
.endm

// ************************************************************************
.macro finish_servo_step

	add ctrl.step, ctrl.step, 1
	add ctrl.data, ctrl.data, NEXT_STEP_DATA_OFFSET
	ldi ctrl.cycle, 0
	qbgt FINISH_SERVO_STEP_EXIT, ctrl.step, 8
	ldi ctrl.step, 0
	mov ctrl.data, DATA_START
	FINISH_SERVO_STEP_EXIT:
.endm

// ************************************************************************
.macro init_servos_for_step
// #1
	pwm_set PWM0_REG_OFFSET, PWM0_MASK_OFFSET
// #2
	pwm_set PWM1_REG_OFFSET, PWM1_MASK_OFFSET
// #3
	pwm_set PWM2_REG_OFFSET, PWM2_MASK_OFFSET
// #4
	pwm_set PWM3_REG_OFFSET, PWM3_MASK_OFFSET
// positions
	lbbo pos4, ctrl.data, POS4_OFFSET, REG_SIZE
.endm
// ************************************************************************
.macro process_cycle
	qbne PROCESS_CYCLE_S0_END, pos4.s0, ctrl.cycle
	pwm_clear PWM0_REG_OFFSET, PWM0_MASK_OFFSET
PROCESS_CYCLE_S0_END:
	qbne PROCESS_CYCLE_S1_END, pos4.s1, ctrl.cycle
	pwm_clear PWM1_REG_OFFSET, PWM1_MASK_OFFSET
PROCESS_CYCLE_S1_END:
	qbne PROCESS_CYCLE_S2_END, pos4.s2, ctrl.cycle
	pwm_clear PWM2_REG_OFFSET, PWM2_MASK_OFFSET
PROCESS_CYCLE_S2_END:
	qbne PROCESS_CYCLE_S3_END, pos4.s3, ctrl.cycle
	pwm_clear PWM3_REG_OFFSET, PWM3_MASK_OFFSET
PROCESS_CYCLE_S3_END:
.endm

// ************************************************************************
.macro next_cycle
	add ctrl.cycle, ctrl.cycle, 1
.endm
